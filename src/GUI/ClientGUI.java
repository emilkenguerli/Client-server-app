/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author Kruger
 */
public class ClientGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClientGUI
     */
    private String msg_out, cgname,cgpass,gname,gpass,filepath = "";
    public ClientGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msg_area_sp = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        login_name = new javax.swing.JTextField();
        create_name = new javax.swing.JTextField();
        create_pass = new javax.swing.JTextField();
        login_pass = new javax.swing.JTextField();
        create_send = new javax.swing.JButton();
        login_send = new javax.swing.JButton();
        download_button = new javax.swing.JButton();
        file_upload = new javax.swing.JButton();
        dfname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dload_area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setColumns(20);
        msg_area.setRows(5);
        msg_area_sp.setViewportView(msg_area);

        msg_text.setText("Type a message...");
        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        msg_send.setText("Send");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        login_name.setText("Enter valid group name");

        create_name.setText("Create group name");

        create_pass.setText("Create group password");
        create_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_passActionPerformed(evt);
            }
        });

        login_pass.setText("Group password");
        login_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_passActionPerformed(evt);
            }
        });

        create_send.setText("Create group");
        create_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_sendActionPerformed(evt);
            }
        });

        login_send.setText("Enter group");
        login_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_sendActionPerformed(evt);
            }
        });

        download_button.setText("Download File");
        download_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_buttonActionPerformed(evt);
            }
        });

        file_upload.setText("Upload");
        file_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_uploadActionPerformed(evt);
            }
        });

        dfname.setText("Give a filename");
        dfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dfnameActionPerformed(evt);
            }
        });

        dload_area.setColumns(20);
        dload_area.setRows(5);
        jScrollPane1.setViewportView(dload_area);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msg_send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dfname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(file_upload, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(login_send, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(download_button, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(login_pass)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(create_name, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(create_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(create_send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(msg_area_sp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(login_name, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(login_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(login_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(login_send, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(file_upload, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(msg_area_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg_text)
                    .addComponent(msg_send, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(dfname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(create_send, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(create_pass, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(create_name, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(download_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Sends message to the message area.
     * @param evt 
     */
    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        try{
        msg_out = msg_text.getText().trim();
        msg_text.setText("");
        msg_area.setText(msg_area.getText().trim()+"\n"+msg_out);
        }
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_msg_sendActionPerformed
    
    /**
     * Returns the last message sent.
     * @return 
     */
    public String getMessage()
    {
        return msg_out;
    }
    
    /**
     * Sends message to the message area.
     * @param evt 
     */
    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        try{
        msg_out = msg_text.getText().trim();
        msg_text.setText("");
        msg_area.setText(msg_area.getText().trim()+"\n"+msg_out);
        }
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_msg_textActionPerformed
    
    /**
     * Collects login details and opens new group chat.
     * @param evt 
     */
    private void login_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_sendActionPerformed
        try{
        gname = login_name.getText().trim();
        gpass = login_pass.getText().trim();
        login_name.setText("");
        login_pass.setText("");
        msg_area.setText("");}
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_login_sendActionPerformed
    
    
    /**
     * Creates group name and password.
     * @param evt 
     */
    private void create_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_sendActionPerformed
        try{
        cgname = create_name.getText().trim();
        cgpass = create_pass.getText().trim();
        create_name.setText("");
        create_pass.setText("");
        msg_area.setText("");}
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_create_sendActionPerformed
    
    /**
     * Collects login details and opens new group chat.
     * @param evt 
     */
    private void login_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_passActionPerformed
        try{
        gname = login_name.getText().trim();
        gpass = login_pass.getText().trim();
        login_name.setText("");
        login_pass.setText("");
        msg_area.setText("");}
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_login_passActionPerformed
    
    /**
     * Creates and saves Group-Password combination.
     * @param evt 
     */
    private void create_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_passActionPerformed
        try{
        cgname = create_name.getText().trim();
        cgpass = create_pass.getText().trim();
        create_name.setText("");
        create_pass.setText("");
        msg_area.setText("");}
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message
        }
    }//GEN-LAST:event_create_passActionPerformed
    
    /**
     * Method to download file from list.
     * @param evt 
     */
    private void download_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_buttonActionPerformed
        try{
        String fname = dfname.getText().trim();
        dfname.setText("");
        if(!fname.equals(""))
        {
            //if(fname) // Check if download filename in dlist
            // Download file fname
            msg_area.setText(msg_area.getText().trim()+"\n"+fname+" downloaded");
        }
        else{
            msg_area.setText(msg_area.getText().trim()+"\nNo file selected");           
        }}catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message            
        }
    }//GEN-LAST:event_download_buttonActionPerformed

    private void dfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dfnameActionPerformed
        try{
        String fname = dfname.getText().trim();
        dfname.setText("");
        if(!fname.equals(""))
        {
            //if(fname) // Check if download filename in dlist
            // Download file fname
            msg_area.setText(msg_area.getText().trim()+"\n"+fname+" downloaded");
        }
        else{
            msg_area.setText(msg_area.getText().trim()+"\nNo file selected");           
        }}catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message            
        }
    }//GEN-LAST:event_dfnameActionPerformed
    
    /**
     * Upload a file.
     * @param evt 
     */
    private void file_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_uploadActionPerformed
        try{
            JFileChooser fc = new JFileChooser();
            fc.setVisible(true);
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fc.showOpenDialog(this);
            File file = fc.getSelectedFile();
            filepath = file.getAbsolutePath();
            msg_area.setText(msg_area.getText().trim()+"\n"+filepath);
        }
        catch(Exception e){
            msg_area.setText(msg_area.getText().trim()+"\n"+e.getMessage()); // Print error message            
        }
    }//GEN-LAST:event_file_uploadActionPerformed
    
    /**
     * Adds a filename and extension to the download area.
     * @param filename 
     */
    public void addToDArea(String filename){
        dload_area.setText(dload_area.getText().trim()+"\n"+filename);
    }
    
    /**
     * Returns the Group name.
     * @return 
     */
    public String getGroupName()
    {
        return gname;
    }
    
    /**
     * Returns the group password.
     * @return 
     */
    public String getGroupPassword()
    {
        return gpass;
    }
    
    /**
     * Returns the new group name.
     * @return 
     */
    public String getNewGroupName()
    {
        return cgname;
    }
    
    /**
     * Returns the new group password.
     * @return 
     */
    public String getNewGroupPassword()
    {
        return cgpass;
    }
    
    /**
     * Adds a message to the text area.
     * @param message 
     */
    public void addMessage(String message)
    {
        msg_area.setText(msg_area.getText().trim()+"\n"+message);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI().setVisible(true);
                msg_area.setEditable(false);
                dload_area.setEditable(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField create_name;
    private javax.swing.JTextField create_pass;
    private javax.swing.JButton create_send;
    private javax.swing.JTextField dfname;
    private static javax.swing.JTextArea dload_area;
    private javax.swing.JButton download_button;
    private javax.swing.JButton file_upload;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField login_name;
    private javax.swing.JTextField login_pass;
    private javax.swing.JButton login_send;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JScrollPane msg_area_sp;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables
}
